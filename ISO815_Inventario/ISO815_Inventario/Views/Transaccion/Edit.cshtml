@model ISO815_Inventario.Models.transaccion

@{
    ViewBag.Title = "Transaccion/Editar";
}

<h2>Transaccion</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.estado, new SelectList(
                      new List<Object>{
                           new { value = "Entrada" , text = "Entrada"  },
                           new { value = "Salida" , text = "Inactivo"  },
                           new { value = "Traslado" , text = "Traslado"  },
                           new { value = "Ajuste" , text = "Ajuste"  }
                      },"value", "text", 2), new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.articulo_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("articulo_id", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.articulo_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.monto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.estado == 1)
                {
                    @("Activo");
                }
                else
                {
                    @Html.DropDownListFor(model => model.estado, new SelectList(
                      new List<Object>{
                           new { value = 1 , text = "Activo"  },
                           new { value = 0 , text = "Inactivo"  }
                      },"value", "text", 2), new { @class = "form-control" } )
                }
            </div>
        </div>

        <div class="row">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
            <div class="col-md-offset-2 col-md-1">
                <p>
                    @(Html.ActionLink("Cancelar", "Index", new { id = 1 }, new { @class = "btn btn-outline-dark" }))
                </p>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
